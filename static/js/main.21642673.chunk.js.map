{"version":3,"sources":["history.js","components/Menu.js","actions/quoteActions.js","components/QuoteOfTheDay.js","components/Header.js","containers/Home.js","actions/listActions.js","components/ListForm.js","components/ListCreate.js","components/QuoteDetail.js","components/AllQuotes.js","containers/QuotesContainer.js","components/QuoteUpvote.js","components/FavoriteQuotes.js","containers/FavoritesContainer.js","components/AllLists.js","containers/ListsContainer.js","App.js","serviceWorker.js","reducers/listReducer.js","reducers/quoteReducer.js","reducers/index.js","index.js"],"names":["createBrowserHistory","basename","Nav","react_default","a","createElement","Menu","stackable","react_router_dom","to","Item","position","Header","as","API_BASE_URL","requestConfig","method","headers","Content-Type","Authorization","concat","process","fetchQuotes","dispatch","fetch","then","response","json","data","type","payload","quotes","selectQuote","quote","QuoteOfTheDay","this","props","fetchQuoteOfTheDay","_this","quoteOfDay","Container","textAlign","body","Subheader","author","renderQuoteOfDay","Component","connect","state","HomeHeader","icon","Icon","circular","color","name","Home","components_Header","Message","floating","components_QuoteOfTheDay","Button","fluid","Link","fetchLists","lists","setList","id","console","log","list","deleteList","addQuoteToListFavorites","selectedQuote","JSON","stringify","removeQuoteFromListFavorites","reduxForm","form","validate","formValues","errors","title","description","renderInput","formProps","input","label","meta","className","error","touched","Object","assign","autoComplete","_ref","renderError","Form","onSubmit","handleSubmit","alert","history","push","Field","component","createList","components_ListForm","currentList","bindActionCreators","Segment","key","Content","Description","Extra","tags","map","tag","Label","size","Popup","trigger","basic","onClick","content","on","AllQuotes","allQuotes","index","List","floated","components_QuoteDetail","pointing","Divider","QuotesContainer","style","marginTop","components_AllQuotes","QuoteUpvote","count","handleClick","setState","prevState","Card","Group","favorites","extra","Or","components_QuoteUpvote","FavoritesContainer","Grid","Column","components_FavoriteQuotes","AllLists","event","target","value","_this2","mapListsForDropdown","allLists","centered","Row","width","onChange","e","handleChange","chosenlist","Meta","vertical","widths","ListInfo","ListContainer","components_AllLists","App","react_router","components_Menu","exact","path","ListCreate","ListsContainer","Boolean","window","location","hostname","match","initialState","loading","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread","find","formReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","es","src_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21642673.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({basename: '/Quotes-React-Redux'}); \n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Menu, Header } from 'semantic-ui-react'\n\n// functional stateless component\nconst Nav = () =>\n  <Menu stackable>\n    <Link to=\"/\" ><Menu.Item>Home</Menu.Item></Link>\n    <Link to=\"/lists\" ><Menu.Item>Pick A List</Menu.Item></Link>\n    <Link to=\"/new\" ><Menu.Item>Create A List</Menu.Item></Link>\n    <Link to=\"/all\" ><Menu.Item>All Quotes</Menu.Item></Link>\n    <Link to=\"/favorites\" ><Menu.Item>Favorites</Menu.Item></Link>\n\n    <Menu.Menu position='right'>\n      <Menu.Item>\n        <Link to=\"/\" >\n          <Header as='h4'>\n            QuotesGalore\n          </Header>\n        </Link>\n      </Menu.Item>\n    </Menu.Menu>\n  </Menu>\n\nexport default Nav\n","import fetch from 'isomorphic-fetch' \n\n   const API_BASE_URL = 'https://favqs.com/api';\n   const API_KEY = process.env.REACT_APP_API_KEY;\n     \n   const requestConfig = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token token=\"${API_KEY}\"`\n    }\n  };\n  export const fetchQuoteOfTheDay = () => {\n    return dispatch => {\n      fetch (`${API_BASE_URL}/qotd`, requestConfig)\n        .then(response => response.json())\n        .then(data => {\n          dispatch({\n            type:'FETCH_QUOTE_OF_THE_DAY',\n            payload: data.quote\n          })\n        })\n    }\n  }\n\n  \n\n  export default function fetchQuotes() {\n    return (dispatch) => {\n      fetch(`${API_BASE_URL}/quotes`, requestConfig)\n      .then(response => response.json())\n      .then(data => dispatch(getQuotesAsync(data.quotes)));\n    }\n  }\n  function getQuotesAsync(quotes){\n    return {\n      type: 'FETCH_QUOTES',\n      payload: quotes\n    };\n  }\n  export const selectQuote = (quote) => {\n    return dispatch => {\n      dispatch({\n        type: 'QUOTE_SELECTED',\n        payload: quote\n      })\n    }\n  }","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Header } from 'semantic-ui-react'\nimport  { fetchQuoteOfTheDay } from '../actions/quoteActions'\n\n\nclass QuoteOfTheDay extends Component {\n  componentDidMount() {\n    this.props.fetchQuoteOfTheDay();\n  }\n\n  render() {\n    const renderQuoteOfDay = () => {\n      if (this.props.quoteOfDay) {\n        return (\n          <Container textAlign='center'>\n            <Header as='h2'>\n              \"{this.props.quoteOfDay.body}\"\n              <Header.Subheader>{this.props.quoteOfDay.author}</Header.Subheader>\n            </Header>\n          </Container>\n        )}\n    }\n\n    return (\n      <div>{renderQuoteOfDay()}</div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quoteOfDay: state.quotes.quoteOfDay\n  }\n}\n\nexport default connect(mapStateToProps, { fetchQuoteOfTheDay })(QuoteOfTheDay);\n","import React from 'react';\nimport { Header, Icon } from 'semantic-ui-react'\n\n// functional stateless component\nconst HomeHeader = () => {\n\treturn(\n\t\t<div>\n\t\t\t<Header as='h2' icon textAlign='center'>\n\t\t\t<Icon circular color=\"violet\" name=\"quote left\" />\n\n\t\t\t</Header>\n\n\t\t</div>\n\t)\n}\n\nexport default HomeHeader\n","import React from 'react'\nimport { Container, Message, Button } from 'semantic-ui-react'\nimport  QuoteOfTheDay  from '../components/QuoteOfTheDay'\nimport Header from '../components/Header'\nimport { Link } from 'react-router-dom';\n\n// functional stateless component\n\nconst Home = () => {\n  return (\n    <Container>\n      <Header/>\n\n      <Message floating>\n        <QuoteOfTheDay />\n      </Message>\n\n      <Button fluid as={Link} to=\"/lists\" color='violet' > View All Lists!</Button>\n    </Container>\n  )\n}\n\nexport default Home\n","import fetch from 'isomorphic-fetch'\n\nexport const createList = (formValues) => {\n  console.log('C');\n  let data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ list: formValues })\n  }\n\n  return dispatch => {\n    fetch(`https://quotesgalore.herokuapp.com/api/lists`, data)\n      .then(response => response.json())\n      .then(list => {\n        console.log('D');\n        dispatch({\n              type: 'CREATE_LIST',\n              payload: list\n            })})\n  }\n\n}\n  export const fetchLists = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_LISTS' })\n      return fetch('https://quotesgalore.herokuapp.com/api/lists')\n      .then(response => {\n        return response.json()\n      }).then(lists => {\n        return dispatch({ type: 'FETCH_LISTS', payload: lists })\n      })\n    }\n  }\n\n  export const setList = id => {\n  console.log(id)\n  let data = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  return dispatch => {\n    fetch(`https://quotesgalore.herokuapp.com/api/lists/${id}`, data)\n    .then(response => {\n      return response.json()\n    }).then (list => {\n      return dispatch({\n        type: 'SET_LIST',\n        payload: list\n      })\n    })\n  }\n}\n\nexport const deleteList = list => {\n  return dispatch => {\n    fetch('https://quotesgalore.herokuapp.com/api/lists/' + list.id, {\n            method: \"DELETE\",\n            headers: {\n            'Content-Type': 'application/json'\n        }\n      })\n      .then(response => dispatch({ type: 'DELETE_LIST', payload: list }));\n    }\n};\n\nexport const addQuoteToListFavorites = (selectedQuote, list) => {\n  let id = list.id\n  let data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ quote: selectedQuote })\n  }\n\n  return dispatch => {\n    fetch (`https://quotesgalore.herokuapp.com/api/lists/${id}/add_to_favorites`, data)\n      .then(response => response.json())\n      .then(quotes => dispatch({\n        type: 'ADD_TO_FAVORITES',\n        payload: quotes\n      }))\n  }\n}\n\nexport const removeQuoteFromListFavorites = (selectedQuote, list) => {\n  let id = list.id\n  let data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ quote: selectedQuote })\n  }\n\n  return dispatch => {\n    fetch(`https://quotesgalore.herokuapp.com/api/lists/${id}/remove_from_favorites`, data)\n      .then(response => response.json())\n      .then(quotes => dispatch({\n        type: 'REMOVE_FROM_FAVORITES',\n        payload: quotes\n      }))\n  }\n}\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Container, Form, Button } from 'semantic-ui-react'\nimport history from '../history';\n\n// functional stateless component\nconst ListForm = (props) => {\n\n    const renderError = ({error, touched}) => {\n        if(touched && error){\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    const renderInput = (formProps) => {\n        const { input, label, meta } = formProps;\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n            return (\n                <div className={className}>\n                    <label>{label}</label>\n                    <input {...input} autoComplete=\"off\" />\n                    <div>{renderError(meta)}</div>\n                </div>\n            );\n    }\n\n    const onSubmit = (formValues) => {\n        console.log('A');\n        props.onSubmit(formValues);\n        console.log('B');\n        alert('List created')\n        history.push('/')\n    };\n\n\n        return (\n            <Container>\n                <Form\n                    onSubmit={props.handleSubmit(onSubmit)}>\n                    <Field name=\"title\" component={renderInput} label=\"Enter title: \" />\n                    <Field name=\"description\" component={renderInput} label=\"Enter descripiton: \" />\n\n                    <Button color=\"violet\">Submit</Button>\n                </Form>\n            </Container>\n        );\n    }\n\n    const validate = (formValues) => {\n        const errors = {};\n        if(!formValues.title){\n        errors.title = 'You must enter a title';\n        }\n        if(!formValues.description){\n        errors.description = 'You must enter a description';\n        }\n        return errors;\n    };\n    \n    export default reduxForm({\n    form: 'ListForm',\n    validate\n    })(ListForm);\n    ","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Header } from 'semantic-ui-react'\nimport { createList } from '../actions/listActions'\nimport ListForm from './ListForm';\n\n// functional stateless component\nconst ListCreate = (props) => {\n\n\tconst onSubmit = formValues => {\n\t\tprops.createList(formValues);\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Header>Create a List</Header>\n\t\t\t<ListForm onSubmit={onSubmit} />\n\t\t</Container>\n\t);\n}\n\nexport default connect(null, { createList })(ListCreate);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Item, Label, Button, Popup, Segment } from 'semantic-ui-react'\nimport { bindActionCreators } from 'redux'\nimport { addQuoteToListFavorites } from '../actions/listActions'\n\n// functional stateless component\nconst QuoteDetail = (props) => {\n\n  const renderQuoteDetail = () => {\n    if (props.selectedQuote) {\n      return (\n        <Segment textAlign='center'>\n          <Item key={props.selectedQuote.id}>\n            <Item.Content>\n              <Item.Header as='h3'>{props.selectedQuote.body}</Item.Header>\n              <Item.Description>{props.selectedQuote.author}</Item.Description>\n\n              <br />\n\n              <Item.Extra key={props.selectedQuote.id}>\n                {props.selectedQuote.tags && props.selectedQuote.tags.map(tag => (\n                  <Label tag size='mini' key={tag.id}>{tag}</Label>\n                ))}\n              </Item.Extra>\n\n              <br />\n\n              <Popup\n                trigger={<Button basic color='violet' onClick={() => props.addQuoteToListFavorites(props.selectedQuote, props.currentList)} content=\"Add to Faves\"/>}\n                content={`Added!`}\n                on='click'\n                position='top right'\n              />\n\n            </Item.Content>\n          </Item>\n        </Segment>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <div>{renderQuoteDetail()}</div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedQuote: state.quotes.selectedQuote,\n    currentList: state.list.currentList\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addQuoteToListFavorites\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteDetail)\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { List, Button, Divider, Label, Icon, Header, Popup } from 'semantic-ui-react'\nimport  fetchQuotes  from '../actions/quoteActions'\nimport { selectQuote }  from '../actions/quoteActions'\nimport QuoteDetail from './QuoteDetail'\n\n\nclass AllQuotes extends Component {\n\n  componentDidMount() {\n    this.props.fetchQuotes();\n  }\n\n    render() {\n      if (this.props.allQuotes && this.props.currentList) {\n        return (\n          <div>\n            <Header as='h2'>\n            <Icon name='list alternate' />\n              <Header.Content>\n              Quotes List\n              </Header.Content>\n            </Header>\n            {this.props.allQuotes.map((quote, index) =>\n            <List key={quote.id}>\n              <List.Item >\n                <List.Content floated='right'>\n                <Popup\n              trigger={<Button color=\"violet\" onClick={() => this.props.selectQuote(quote)}content=\"View Quote\"/>}\n              content={<QuoteDetail />}\n              on='click'\n              position='top right'\n              />\n\n                </List.Content>\n\n                <List.Content key={quote.id}>\n                <Icon name=\"quote left\" />{quote.body}\n                </List.Content>\n                <List.Content>\n                <Label pointing>{quote.author}</Label>\n                </List.Content>\n              </List.Item>\n            <Divider />\n            </List>\n          )}\n          </div>\n        )\n        } else {\n        return (\n\n        <div>You must select a list first!</div>\n        )\n      }\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    allQuotes: state.quotes.allQuotes,\n    currentList: state.list.currentList,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\nselectQuote,\nfetchQuotes\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllQuotes)\n","import React from 'react'\nimport AllQuotes from '../components/AllQuotes';\nimport Header from '../components/Header'\nimport { Divider, Container } from 'semantic-ui-react'\n\n// functional stateless component\nconst QuotesContainer = (props) => {\n  return (\n    <Container style={{ marginTop: '30px' }}>\n      <Header />\n      <Divider />\n      <AllQuotes />\n    </Container>\n  );\n}\n\nexport default QuotesContainer\n","import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\nclass QuoteUpvote extends Component {\n  state = {\n    count: 0\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    }))\n  }\n\n  render() {\n    return (\n      <div>\n        <Button color='red'\n\t      content='Like'\n\t      icon='heart'\n\t      label={{ basic: true, color: 'red', pointing: 'left', content: this.state.count}}\n\t      onClick={this.handleClick}/>\n      </div>\n    )\n  }\n}\n\nexport default QuoteUpvote\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { Container, Card, Button, Header, Icon } from 'semantic-ui-react'\nimport {connect} from 'react-redux'\n\nimport { removeQuoteFromListFavorites } from '../actions/listActions'\nimport QuoteUpvote from '../components/QuoteUpvote'\n\n// functional stateless component\nconst FavoriteQuotes = (props) => {\n    if (props.currentList) {\n      return (\n        <Container>\n          <Header as='h2'>\n          <Icon name='list alternate' />\n          <Header.Content>\n          You are in Your \"{props.currentList.title}\" List\n          </Header.Content>\n          </Header>\n            <Card.Group>\n            {props.currentList.favorites.map((quote, index) =>\n            <Card key={quote.id}>\n              <Card.Content>\n              <Card.Header>{quote.author}</Card.Header>\n\n              <Card.Description> {quote.body} </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n              <Button.Group>\n              <Button onClick={() => props.removeQuoteFromListFavorites(quote, props.currentList)}>\n              Remove Quote\n              </Button>\n              <Button.Or />\n              <QuoteUpvote />\n              </Button.Group>\n              </Card.Content>\n            </Card>\n            )}\n            </Card.Group>\n        </Container>\n      )\n    }\n\n    return(\n     <div>You must select a list first!</div>\n    )\n\n  }\n\nconst mapStateToProps = (state) => {\n  return {\n  currentList: state.list.currentList,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\nremoveQuoteFromListFavorites\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoriteQuotes)\n","import React from 'react'\nimport FavoriteQuotes from '../components/FavoriteQuotes';\nimport Header from '../components/Header'\nimport { Grid, Divider, Container } from 'semantic-ui-react'\n\n// functional stateless component\nconst FavoritesContainer = () => {\n  return (\n    <Container style={{ marginTop: '30px' }}>\n      <Header />\n      <Divider />\n\n      <Grid >\n        <Grid.Column>\n          <FavoriteQuotes />\n        </Grid.Column>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default FavoritesContainer\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'\nimport { Link } from 'react-router-dom';\nimport { Grid, Button, Divider, Card } from 'semantic-ui-react';\n\nimport history from '../history';\nimport { deleteList } from '../actions/listActions';\nimport { fetchLists }  from '../actions/listActions'\nimport { setList }  from '../actions/listActions'\n\n\nclass AllLists extends Component {\n  componentDidMount() {\n    this.props.fetchLists()\n  }\n\n  handleChange(event) {\n    this.props.setList(event.target.value)\n  }\n\n  onClick = (currentList) => {\n    this.props.deleteList(this.props.currentList)\n    alert('List deleted!')\n    history.push('/')\n  };\n\n  render() {\n    const mapListsForDropdown = this.props.allLists.map((list, index) => {\n      return (\n        <option value={list.id} key={list.id} id={list.id}>\n          {list.title}\n        </option>\n      )\n    })\n\n    const ListInfo = () => {\n      if (this.props.currentList) {\n        const chosenlist = this.props.currentList;\n\n        return (\n          <div>\n            <Card.Group centered>\n              <Card fluid>\n                <Card.Content>\n                  <Card.Header as='h2' textAlign='center'>{chosenlist.title}\n                    <Card.Meta content={chosenlist.description} />\n                  </Card.Header>\n\n                  <Card.Content extra >\n                    <Button.Group basic vertical widths='5'>\n                      <Button as={Link} to=\"/all\" basic color='violet'>Add Quotes </Button>\n                      <Button as={Link} to=\"/favorites\" basic color='green'>Favorites</Button>\n                      <Button onClick={() => this.onClick()} basic color='red'>Delete List</Button>\n                    </Button.Group>\n                  </Card.Content>\n                </Card.Content>\n              </Card>\n            </Card.Group>\n          </div>\n        )\n      }\n    }\n\n    return (\n      <div>\n        <Grid centered >\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <div className=\"ui centered card\">\n                <select onChange={(e) => this.handleChange(e)}>\n                  <option value=\"\">Select a List</option>\n                  {mapListsForDropdown}\n                </select>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Divider />\n\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <div>{ListInfo()}</div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      allLists: state.list.allLists,\n      currentList: state.list.currentList\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  deleteList,\n  fetchLists,\n  setList\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps) ( AllLists);\n","import React from 'react'\nimport { Container } from 'semantic-ui-react'\nimport  AllLists  from '../components/AllLists'\nimport Header from '../components/Header'\n\n// functional stateless component\nconst ListContainer = () => {\n\treturn (\n\t\t<Container>\n\t\t\t<Header/>\n\t\t\t<AllLists/>\n\t\t</Container>\n\t)\n}\n\nexport default ListContainer\n","import React from 'react';\nimport {  Router, Route, Switch } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport history from './history';\nimport Nav from './components/Menu'\nimport Home from './containers/Home'\nimport ListCreate from './components/ListCreate'\nimport QuotesContainer from './containers/QuotesContainer'\nimport FavoritesContainer from './containers/FavoritesContainer'\nimport ListsContainer from './containers/ListsContainer'\n\n// functional compoennt\nconst App = () => (\n//\n    <Router history={history}>\n\n     <Route>\n      <Nav />\n     </Route>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/new\" component={ListCreate} />\n        <Route exact path=\"/lists\" component={ListsContainer} />\n        <Route exact path=\"/all\" component={QuotesContainer}/>\n        <Route exact path=\"/favorites\" component={FavoritesContainer}/>\n      </Switch>\n  </Router>\n\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\nconst initialState = {\n  loading: false,\n  allLists: [],\n  currentList: null,\n}\n\nexport default function listReducer(state = initialState, action) {\n  switch(action.type) {\n    case 'LOADING_LISTS':\n      return { ...state, loading: true}\n    case 'CREATE_LIST':\n      return { ...state, list: action.payload };\n    case 'FETCH_LISTS':\n      return { ...state, loading: false, allLists: action.payload}\n      case 'DELETE_LIST':\n      return {...state, currentList: null, loading: false }\n    case 'RETRIEVING_SELECTED_LIST':\n      return { ...state, loading: true }\n    case 'SET_LIST':\n      return { ...state, currentList: state.allLists.find(list => list.id === action.payload.id) }\n    case 'ADD_TO_FAVORITES':\n      return { ...state, currentList: {...state.currentList, favorites: action.payload }}\n    case 'REMOVE_FROM_FAVORITES':\n      return { ...state, currentList: {...state.currentList, favorites: action.payload }}\n    default: return state\n  }\n}\n","const initialState = {\n  loading: false,\n  selectedQuote: null,\n  quoteOfDay: null,\n  allQuotes: [],\n}\n\nexport default function quoteReducer(state = initialState, action) {\n  switch(action.type) {\n    case 'FETCH_QUOTE_OF_THE_DAY':\n      return { ...state, loading: false, quoteOfDay: action.payload}\n    case 'LOADING_QUOTES':\n      return { ...state, loading: true }\n    case 'FETCH_QUOTES':\n      return { ...state, loading: false, allQuotes: action.payload }\n    case 'QUOTE_SELECTED':\n      return { ...state, loading: false, selectedQuote: action.payload }\n    default: return state\n  }\n}","import { combineReducers } from 'redux';\nimport listReducer from './listReducer'\nimport quoteReducer from './quoteReducer'\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n\t// our app has a piece of state called list (or quotes, or form) where the value is \n\t// whatever gets returned from the reducer on the right of the colon (i.e., a list of quotes).\n  list: listReducer,\n  quotes: quoteReducer,\n  form: formReducer\n\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n\nimport reduxThunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(reduxThunk))\n  \n);\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n  \n    < App />\n    \n  </Provider>,\n  document.querySelector('#root')\n)\n\nexport default store;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}